{"version":3,"sources":["fonts/Roboto/Roboto-Black.ttf","fonts/Roboto/Roboto-BlackItalic.ttf","fonts/Roboto/Roboto-Bold.ttf","fonts/Roboto/Roboto-BoldItalic.ttf","fonts/Roboto/Roboto-Italic.ttf","fonts/Roboto/Roboto-Light.ttf","fonts/Roboto/Roboto-LightItalic.ttf","fonts/Roboto/Roboto-Medium.ttf","fonts/Roboto/Roboto-MediumItalic.ttf","fonts/Roboto/Roboto-Regular.ttf","fonts/Roboto/Roboto-Thin.ttf","fonts/Roboto/Roboto-ThinItalic.ttf","styles/Colors.jsx","styles/Global.jsx","views/header-view/HeaderStyle.jsx","views/header-view/utils.js","styles/Fonts.jsx","components/hamburger-comp/HamburegerStyle.jsx","components/hamburger-comp/HamburegerComp.jsx","views/header-view/HeaderView.jsx","views/side-view/SideStyle.jsx","views/side-view/utils.js","views/side-view/SideView.jsx","screens/main-screen/MainScreen.jsx","App.jsx","index.js"],"names":["module","exports","colors","primary","secondary","title","text","border","gradient","shadow","box_shadow","success","danger","warning","info","dark","light","gray","darkgray","white","sky","GlobalStyle","createGlobalStyle","GlobalFonts","RobotoBlack","RobotoBlackItalic","RobotoBold","RobotoBoldItalic","RobotoItalic","RobotoLight","RobotoLightItalic","RobotoMedium","RobotoMediumItalic","RobotoRegular","RobotoThin","RobotoThinItalic","WrapperHeader","styled","div","InitialHeader","boxShadow","ScrollerHeader","position","height","InlineHeader","WrapperLogo","LastNameItem","textTransform","color","WrapperNavigation","ListNavigation","ul","ListItem","li","LabelItem","marginBottom","cursor","textDecoration","TopicLists","_id","label","Capitalize","P","p","H2","span","small","strong","h1","h2","h3","h4","h5","WrapperHambureger","ToggleButton","button","ToggleButtonLine","HamburegerComp","drawerToggleClickHandler","onClick","HeaderView","useState","window","scrollY","isScroller","setIsScroller","Header","isWrapperHeader","setIsWrapperHeader","scrollHandler","useCallback","useEffect","addEventListener","removeEventListener","style","utils","map","item","key","WrapperSide","WrapperSideClose","transform","WrapperSideOpen","SideView","onShowSideDrawer","Side","MainScreen","props","sideDrawerOpen","setSideDrawerOpen","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2081e086.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Roboto-Black.5ebb24ee.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-BlackItalic.99682a78.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Bold.e07df86c.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-BoldItalic.5b44818d.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Italic.a720f17a.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Light.88823c20.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-LightItalic.a3ce4440.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Medium.58aef543.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-MediumItalic.cf23e1bb.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Regular.11eabca2.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Thin.321de678.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-ThinItalic.35a9c89a.ttf\";","const colors = {\n\tprimary: \"#4458dc\",\n\tsecondary: \"#854fee\",\n\ttitle: \"#141313\",\n\ttext: \"#777777\",\n\tborder: \"#201f1f17\",\n\tgradient: \"linear-gradient(90deg, #4458dc 0%, #854fee 100%)\",\n\tshadow: \"0px 10px 30px rgba(118, 85, 225, 0.3)\",\n\tbox_shadow: \"0px 10px 30px rgba(57, 56, 61, 0.205)\",\n\tsuccess: \"#28a745\",\n\tdanger: \"#dc3545\",\n\twarning: \"#ffc107\",\n\tinfo: \"#17a2b8\",\n\tdark: \"#343a40\",\n\tlight: \"#f8f9fa\",\n\tgray: \"#bebebe\",\n\tdarkgray: \"#878787\",\n\twhite: \"#ffffff\",\n\tsky: \"#87ceeb\",\n};\n\nexport default colors;\n","import { createGlobalStyle } from \"styled-components\";\nimport colors from \"./Colors\";\nimport RobotoBlack from \"../fonts/Roboto/Roboto-Black.ttf\";\nimport RobotoBlackItalic from \"../fonts/Roboto/Roboto-BlackItalic.ttf\";\nimport RobotoBold from \"../fonts/Roboto/Roboto-Bold.ttf\";\nimport RobotoBoldItalic from \"../fonts/Roboto/Roboto-BoldItalic.ttf\";\nimport RobotoItalic from \"../fonts/Roboto/Roboto-Italic.ttf\";\nimport RobotoLight from \"../fonts/Roboto/Roboto-Light.ttf\";\nimport RobotoLightItalic from \"../fonts/Roboto/Roboto-LightItalic.ttf\";\nimport RobotoMedium from \"../fonts/Roboto/Roboto-Medium.ttf\";\nimport RobotoMediumItalic from \"../fonts/Roboto/Roboto-MediumItalic.ttf\";\nimport RobotoRegular from \"../fonts/Roboto/Roboto-Regular.ttf\";\nimport RobotoThin from \"../fonts/Roboto/Roboto-Thin.ttf\";\nimport RobotoThinItalic from \"../fonts/Roboto/Roboto-ThinItalic.ttf\";\n\nexport const GlobalStyle = createGlobalStyle`\n  html, body {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    font-family: -apple-system, \n                  BlinkMacSystemFont, \n                  \"Segoe UI\",\n                  \"Roboto\", \n                  \"Oxygen\", \n                  \"Ubuntu\", \n                  \"Cantarell\", \n                  \"Fira Sans\", \n                  \"Droid Sans\",\n                  \"Helvetica Neue\", \n                  sans-serif !important;\n    font-size: 1rem;\n    background-color: ${colors.white};\n    color: ${colors.title};\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n\nexport const GlobalFonts = createGlobalStyle`\n  @font-face {\n    font-family: 'Roboto-Black';\n    src: url(${RobotoBlack});\n  }\n\n  @font-face {\n    font-family: 'Roboto-BlackItalic';\n    src: url(${RobotoBlackItalic});\n  }\n\n  @font-face {\n    font-family: 'Roboto-Bold';\n    src: url(${RobotoBold});\n  }\n\n  @font-face {\n    font-family: 'Roboto-BoldItalic';\n    src: url(${RobotoBoldItalic});\n  }\n\n  @font-face {\n    font-family: 'Roboto-Italic';\n    src: url(${RobotoItalic});\n  }\n\n  @font-face {\n    font-family: 'Roboto-Light';\n    src: url(${RobotoLight});\n  }\n\n  @font-face {\n    font-family: 'Roboto-LightItalic';\n    src: url(${RobotoLightItalic});\n  }\n\n  @font-face {\n    font-family: 'Roboto-Medium';\n    src: url(${RobotoMedium});\n  }\n\n  @font-face {\n    font-family: 'Roboto-MediumItalic';\n    src: url(${RobotoMediumItalic});\n  }\n\n  @font-face {\n    font-family: 'Roboto-Regular';\n    src: url(${RobotoRegular});\n  }\n\n  @font-face {\n    font-family: 'Roboto-Thin';\n    src: url(${RobotoThin});\n  }\n\n  @font-face {\n    font-family: 'Roboto-ThinItalic';\n    src: url(${RobotoThinItalic});\n  }\n`;\n","import styled from \"styled-components\";\nimport colors from \"../../styles/Colors\";\n\nexport const WrapperHeader = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\tbackground: ${colors.white};\n\theight: 90px;\n\tz-index: 2048;\n\ttransition: 0.5s;\n`;\n\nexport const InitialHeader = {\n\tboxShadow: \"none\",\n};\n\nexport const ScrollerHeader = {\n\tposition: \"fixed\",\n\theight: \"70px\",\n\tboxShadow: colors.box_shadow,\n};\n\nexport const InlineHeader = styled.div`\n\tdisplay: flex;\n\theight: 100%;\n\talign-items: center;\n\tjustify-content: space-between;\n\tmargin: auto 1rem;\n`;\n\nexport const WrapperLogo = styled.div`\n\tdisplay: flex;\n`;\n\nexport const LastNameItem = {\n\ttextTransform: \"uppercase\",\n\tcolor: colors.sky,\n};\n\nexport const WrapperNavigation = styled.div``;\n\nexport const ListNavigation = styled.ul`\n\tdisplay: flex;\n\tlist-style: none;\n\tmargin: 0;\n\tpadding: 0;\n\n\t@media (max-width: 768px) {\n\t\tdisplay: none;\n\t}\n`;\n\nexport const ListItem = styled.li`\n\tmargin: auto 1rem;\n\ttext-transform: uppercase;\n\ttransition: transform 0.2s;\n\n\t:focus {\n\t\toutline: none;\n\t}\n\n\t:active,\n\t:hover {\n\t\ttransform: scale(1.2);\n\t}\n`;\n\nexport const LabelItem = {\n\tmarginBottom: \"0px\",\n\tcursor: \"pointer\",\n\ttextDecoration: \"none\",\n};\n","export const FirstName = \"chattavat.\";\nexport const LastName = \"v\";\n\nexport const TopicLists = [\n\t{ _id: \"1\", label: \"home\" },\n\t{ _id: \"2\", label: \"about\" },\n\t{ _id: \"3\", label: \"training\" },\n\t{ _id: \"4\", label: \"career\" },\n\t{ _id: \"5\", label: \"project\" },\n\t{ _id: \"6\", label: \"experience\" },\n\t{ _id: \"7\", label: \"contact\" },\n];\n","import styled from \"styled-components\";\nimport colors from \"../styles/Colors\";\n\nexport const Capitalize = {\n\ttextTransform: \"capitalize\",\n};\n\nexport const Uppercase = {\n\ttextTransform: \"uppercase\",\n};\n\nexport const LowerCase = {\n\ttextTransform: \"lowercase\",\n};\n\nexport const P = styled.p`\n\tfont-family: \"Roboto-Regular\";\n\tcolor: ${colors.text};\n\tmargin-top: 0rem;\n\tmargin-bottom: 1rem;\n\tfont-size: 1rem;\n`;\n\nexport const Span = styled.span`\n\tfont-family: \"Roboto-Regular\";\n\tcolor: ${colors.text};\n`;\n\nexport const Small = styled.small`\n\tfont-family: \"Roboto-Thin\";\n\tcolor: ${colors.title};\n\tfont-size: 0.75rem;\n\tletter-spacing: 2px;\n`;\n\nexport const Strong = styled.strong`\n\tfont-family: \"Roboto-Bold\";\n`;\n\nexport const H1 = styled.h1`\n\tfont-family: \"Roboto-Bold\";\n\tcolor: ${colors.title};\n\tfont-size: 2.5rem;\n`;\n\nexport const H2 = styled.h2`\n\tfont-family: \"Roboto-Bold\";\n\tcolor: ${colors.title};\n\tfont-size: 2rem;\n`;\n\nexport const H3 = styled.h3`\n\tfont-family: \"Roboto-Bold\";\n\tcolor: ${colors.title};\n\tfont-size: 1.75rem;\n`;\n\nexport const H4 = styled.h4`\n\tfont-family: \"Roboto-Bold\";\n\tcolor: ${colors.title};\n\tfont-size: 1.5rem;\n`;\n\nexport const H5 = styled.h5`\n\tfont-family: \"Roboto-Bold\";\n\tcolor: ${colors.title};\n\tfont-size: 1.25rem;\n`;\n","import styled from \"styled-components\";\nimport colors from \"../../styles/Colors\";\n\nexport const WrapperHambureger = styled.div`\n\t@media (min-width: 768px) {\n\t\tdisplay: none;\n\t}\n`;\n\nexport const ToggleButton = styled.button`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-around;\n\theight: 35px;\n\twidth: 35px;\n\tbackground: transparent;\n\tborder: none;\n\tcursor: pointer;\n\tpadding: 0;\n\tbox-sizing: border-box;\n\tmargin-bottom: 0.5rem;\n\n\t:focus {\n\t\toutline: none;\n\t}\n`;\n\nexport const ToggleButtonLine = styled.div`\n\twidth: 35px;\n\theight: 5px;\n\tborder-radius: 5px;\n\tbackground: ${colors.sky};\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as Style from \"./HamburegerStyle\";\n\nconst HamburegerComp = ({ drawerToggleClickHandler }) => {\n\treturn (\n\t\t<Style.WrapperHambureger>\n\t\t\t<Style.ToggleButton onClick={drawerToggleClickHandler}>\n\t\t\t\t<Style.ToggleButtonLine />\n\t\t\t\t<Style.ToggleButtonLine />\n\t\t\t\t<Style.ToggleButtonLine />\n\t\t\t</Style.ToggleButton>\n\t\t</Style.WrapperHambureger>\n\t);\n};\n\nHamburegerComp.propTypes = {\n\tdrawerToggleClickHandler: PropTypes.func.isRequired,\n};\n\nexport default HamburegerComp;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as Header from \"./HeaderStyle\";\nimport * as utils from \"./utils\";\nimport { H2, P, Capitalize } from \"../../styles/Fonts\";\nimport HamburgerComp from \"../../components/hamburger-comp/HamburegerComp\";\n\nconst HeaderView = ({ drawerToggleClickHandler }) => {\n\tconst [isScroller, setIsScroller] = useState(window.scrollY);\n\tconst [isWrapperHeader, setIsWrapperHeader] = useState(Header.InitialHeader);\n\n\tconst scrollHandler = useCallback(() => {\n\t\tsetIsScroller(window.scrollY);\n\t}, []);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"scroll\", scrollHandler);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"scroll\", scrollHandler);\n\t\t};\n\t}, [scrollHandler]);\n\n\tuseEffect(() => {\n\t\tisScroller > 100\n\t\t\t? setIsWrapperHeader(Header.ScrollerHeader)\n\t\t\t: setIsWrapperHeader(Header.InitialHeader);\n\t}, [isScroller]);\n\n\treturn (\n\t\t<Header.WrapperHeader style={isWrapperHeader}>\n\t\t\t<Header.InlineHeader>\n\t\t\t\t<Header.WrapperLogo>\n\t\t\t\t\t<H2 style={Capitalize}>{utils.FirstName}</H2>\n\t\t\t\t\t<H2 style={Header.LastNameItem}>{utils.LastName}</H2>\n\t\t\t\t</Header.WrapperLogo>\n\t\t\t\t<Header.WrapperNavigation>\n\t\t\t\t\t<HamburgerComp drawerToggleClickHandler={drawerToggleClickHandler} />\n\t\t\t\t\t<Header.ListNavigation>\n\t\t\t\t\t\t{utils.TopicLists.map((item) => (\n\t\t\t\t\t\t\t<Header.ListItem key={item._id}>\n\t\t\t\t\t\t\t\t<P style={Header.LabelItem}>{item.label}</P>\n\t\t\t\t\t\t\t</Header.ListItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Header.ListNavigation>\n\t\t\t\t</Header.WrapperNavigation>\n\t\t\t</Header.InlineHeader>\n\t\t</Header.WrapperHeader>\n\t);\n};\n\nHeaderView.propTypes = {\n\tdrawerToggleClickHandler: PropTypes.func.isRequired,\n};\n\nexport default HeaderView;\n","import styled from \"styled-components\";\nimport colors from \"../../styles/Colors\";\n\nexport const WrapperSide = styled.div`\n\theight: 80%;\n\tbackground: ${colors.white};\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\tz-index: 200;\n\ttransition: transform 0.5s ease-out;\n\n\t@media (min-width: 768px) {\n\t\tdisplay: none;\n\t}\n`;\n\nexport const WrapperSideClose = {\n\ttransform: \"translateY(-100%)\",\n};\n\nexport const WrapperSideOpen = {\n\ttransform: \"translateY(18%)\",\n\tboxShadow: colors.box_shadow,\n};\n\nexport const ListNavigation = styled.ul`\n\ttext-transform: uppercase;\n\theight: 100%;\n\tlist-style: none;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\tpadding-left: 0px;\n`;\n\nexport const ListItem = styled.li`\n\ttext-align: center;\n\ttransition: transform 0.2s;\n\tmargin: 0.5rem 0;\n`;\n","export const TopicLists = [\n\t{ _id: \"1\", label: \"home\" },\n\t{ _id: \"2\", label: \"about\" },\n\t{ _id: \"3\", label: \"training\" },\n\t{ _id: \"4\", label: \"career\" },\n\t{ _id: \"5\", label: \"project\" },\n\t{ _id: \"6\", label: \"experience\" },\n\t{ _id: \"7\", label: \"contact\" },\n];\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as Side from \"./SideStyle\";\nimport * as utils from \"./utils\";\nimport { P } from \"../../styles/Fonts\";\n\nconst SideView = ({ onShowSideDrawer }) => {\n\treturn (\n\t\t<Side.WrapperSide\n\t\t\tstyle={onShowSideDrawer ? Side.WrapperSideOpen : Side.WrapperSideClose}\n\t\t>\n\t\t\t<Side.ListNavigation>\n\t\t\t\t{utils.TopicLists.map((item) => (\n\t\t\t\t\t<Side.ListItem key={item._id}>\n\t\t\t\t\t\t<P>{item.label}</P>\n\t\t\t\t\t</Side.ListItem>\n\t\t\t\t))}\n\t\t\t</Side.ListNavigation>\n\t\t</Side.WrapperSide>\n\t);\n};\n\nSideView.propTypes = {\n\tonShowSideDrawer: PropTypes.bool.isRequired,\n};\n\nexport default SideView;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport HeaderView from \"../../views/header-view/HeaderView\";\nimport SideView from \"../../views/side-view/SideView\";\n\nconst MainScreen = (props) => {\n\tconst [sideDrawerOpen, setSideDrawerOpen] = useState(false);\n\n\treturn (\n\t\t<>\n\t\t\t<HeaderView\n\t\t\t\tdrawerToggleClickHandler={() => setSideDrawerOpen(!sideDrawerOpen)}\n\t\t\t/>\n\t\t\t<SideView onShowSideDrawer={sideDrawerOpen} />\n\t\t\t<div style={{ height: \"200vh\" }}></div>\n\t\t</>\n\t);\n};\n\nMainScreen.propTypes = {};\n\nexport default MainScreen;\n","import React, { Fragment } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport * as Global from \"./styles/Global\";\nimport MainScreen from \"./screens/main-screen/MainScreen\";\n\nconst App = () => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Router>\n\t\t\t\t<Global.GlobalStyle />\n\t\t\t\t<Global.GlobalFonts />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/chattavat.github.io\" component={MainScreen} />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</Fragment>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.min.js\";\nimport \"../node_modules/jquery/dist/jquery.min.js\";\nimport \"../node_modules/popper.js/dist/umd/popper.min.js\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}